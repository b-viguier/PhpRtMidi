<?php

namespace {

    /**
    * @method int rtmidi_get_port_count(\FFI\CData<\RtMidiInPtr>|\FFI\CData<\RtMidiOutPtr> $device)
    * @method string rtmidi_get_port_name(\FFI\CData<\RtMidiInPtr>|\FFI\CData<\RtMidiOutPtr> $device, int $port)
    * @method int rtmidi_get_compiled_api(\FFI\CData<int> $apis, int $apis_size)
    * @method void rtmidi_open_port (\FFI\CData<\RtMidiInPtr>|\FFI\CData<\RtMidiOutPtr> $device, int $portNumber, string $portName);
    * @method void rtmidi_open_virtual_port (\FFI\CData<\RtMidiInPtr>|\FFI\CData<\RtMidiOutPtr> $device, string $portName);
    *
    * @method \FFI\CData<\RtMidiInPtr> rtmidi_in_create_default()
    * @method \FFI\CData<\RtMidiInPtr> rtmidi_in_create(int $api, string $clientName, int $queueSizeLimit)
    * @method void rtmidi_in_free(\FFI\CData<\RtMidiInPtr> $input)
    * @method float rtmidi_in_get_message(\FFI\CData<\RtMidiInPtr> $input, \FFI\CData<mixed> &$buffer, \FFI\CData<int> $size)
    *
    * @method \FFI\CData<\RtMidiOutPtr> rtmidi_out_create_default()
    * @method \FFI\CData<\RtMidiOutPtr> rtmidi_out_create(int $api, string $clientName)
    * @method void rtmidi_out_free(\FFI\CData<\RtMidiOutPtr> $data)
    * @method \FFI\CData rtmidi_out_send_message(\FFI\CData<\RtMidiOutPtr> $output, \FFI\CData $message, int $length)
    */
    final class FFI
    {
        /**
        * @template T
        * @param \FFI\CData<T> $data
        * @return \FFI\CData<T>
        */
        public static function addr(\FFI\CData &$data): FFI\CData {}
    }
}

namespace FFI {

    /**
    * @template T
    * @property T $cdata
    */
    final class CData
    {
    }
}
